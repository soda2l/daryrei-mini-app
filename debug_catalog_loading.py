#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –∫–∞—Ç–∞–ª–æ–≥–∞
"""

import requests
import json
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SERVER_API_URL = "https://daryreibot.duckdns.org/api/catalog"

def test_server_api():
    """–¢–µ—Å—Ç API —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å–µ—Ä–≤–µ—Ä–∞...")
    
    try:
        response = requests.get(SERVER_API_URL, timeout=10)
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            catalog = response.json()
            print("‚úÖ API —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞—Ç–∞–ª–æ–≥–∞
            print(f"\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞:")
            print(f"   –ö–ª—é—á–∏: {list(catalog.keys())}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            categories = catalog.get('categories', [])
            print(f"\nüìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ ({len(categories)}):")
            for i, category in enumerate(categories, 1):
                print(f"   {i}. ID: {category.get('id', '–ù–µ—Ç ID')}")
                print(f"      –ù–∞–∑–≤–∞–Ω–∏–µ: {category.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
                print()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã
            products = catalog.get('products', [])
            print(f"üì¶ –¢–æ–≤–∞—Ä—ã ({len(products)}):")
            for i, product in enumerate(products[:3], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"   {i}. ID: {product.get('id', '–ù–µ—Ç ID')}")
                print(f"      –ù–∞–∑–≤–∞–Ω–∏–µ: {product.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
                print(f"      –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {product.get('category', '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')}")
                print(f"      –¶–µ–Ω–∞: {product.get('price', '–ë–µ–∑ —Ü–µ–Ω—ã')} ‚ÇΩ")
                print(f"      –û–ø–∏—Å–∞–Ω–∏–µ: {product.get('description', '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è')[:50]}...")
                print()
            
            return catalog
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: HTTP {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API: {e}")
        return None

def test_fallback_data():
    """–¢–µ—Å—Ç fallback –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüíæ –¢–µ—Å—Ç–∏—Ä—É–µ–º fallback –¥–∞–Ω–Ω—ã–µ...")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º fallback –¥–∞–Ω–Ω—ã–µ
    fallback_catalog = {
        "categories": [
            { "id": "candles", "name": "–°–≤–µ—á–∏" },
            { "id": "boxes", "name": "–ö–æ—Ä–æ–±–∫–∏" },
            { "id": "postcards", "name": "–û—Ç–∫—Ä—ã—Ç–∫–∏" },
            { "id": "stickers", "name": "–°—Ç–∏–∫–µ—Ä—ã" },
            { "id": "home", "name": "–î–ª—è –¥–æ–º–∞" }
        ],
        "products": [
            {
                "id": "candle_banana_chocolate",
                "name": "–°–≤–µ—á–∞ \"–ë–∞–Ω–∞–Ω-—à–æ–∫–æ–ª–∞–¥\"",
                "category": "candles",
                "price": 1290,
                "description": "–°–æ—Å—Ç–∞–≤ –Ω–∞–±–æ—Ä–∞: üß¶üéß‚õàÔ∏è —Å–≤–µ—á–∞ —Å –∞—Ä–æ–º–∞—Ç–æ–º ¬´–±–∞–Ω–∞–Ω –≤ –æ–≤—Å—è–Ω–æ–º –º–æ–ª–æ–∫–µ, —Ç–µ–ø–ª–æ–≥–æ –∫–∞–∫–∞–æ —Å –¥—É—à–∏—Å—Ç—ã–º–∏ –Ω–æ—Ç–∞–º–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö –∫–æ—Ñ–µ–π–Ω—ã—Ö –∑–µ—Ä–µ–Ω¬ª, –≥–∏–ø—Å–æ–≤–æ–µ –∫–∞—à–ø–æ —Ü–≤–µ—Ç–∞ —Ç–æ–ø–ª–µ–Ω–æ–≥–æ –º–æ–ª–æ–∫–∞ —Å –º–∞—Ç–æ–≤–æ–π —Ç–µ–∫—Å—Ç—É—Ä–æ–π, —á–µ–º-—Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞—é—â–µ–π —Å—Ç–∞—Ä–∏–Ω–Ω—ã–π —Ñ–∞—Ä—Ñ–æ—Ä, –ø–æ–¥–∞—Ä–æ—á–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞, —É—é—Ç–Ω—ã–µ –ø–æ–¥–∞—Ä–æ—á–∫–∏ üåßÔ∏è üç™‚òïÔ∏è üçå",
                "images": ["candle_–±–∞–Ω–∞–Ω_—à–æ–∫–æ–ª–∞–¥.jpg"],
                "available": True
            }
        ]
    }
    
    print("‚úÖ Fallback –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã")
    print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {len(fallback_catalog['categories'])}")
    print(f"   –¢–æ–≤–∞—Ä–æ–≤: {len(fallback_catalog['products'])}")
    
    return fallback_catalog

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –∫–∞—Ç–∞–ª–æ–≥–∞")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å–µ—Ä–≤–µ—Ä–∞
    server_catalog = test_server_api()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º fallback –¥–∞–Ω–Ω—ã–µ
    fallback_catalog = test_fallback_data()
    
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    
    if not server_catalog:
        print("1. ‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ fallback –¥–∞–Ω–Ω—ã–µ")
        print("2. üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
        print("3. üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL —Å–µ—Ä–≤–µ—Ä–∞")
    else:
        print("1. ‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
        print("2. üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Ç–µ –∫–∞—Ç–∞–ª–æ–≥ —Å —Å–µ—Ä–≤–µ—Ä–∞")
    
    print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –Ω–∞ –æ—à–∏–±–∫–∏")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–∞–ª–∏–¥–Ω—ã–π JSON")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ fallback –¥–∞–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç")

if __name__ == "__main__":
    main()
