#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç API –∫–∞—Ç–∞–ª–æ–≥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
"""

import requests
import json
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SERVER_API_URL = "https://daryreibot.duckdns.org/api/catalog"
LOCAL_CATALOG_FILE = "catalog.json"

def test_server_api():
    """–¢–µ—Å—Ç API —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å–µ—Ä–≤–µ—Ä–∞...")
    
    try:
        response = requests.get(SERVER_API_URL, timeout=10)
        if response.status_code == 200:
            catalog = response.json()
            print("‚úÖ API —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞—Ç–∞–ª–æ–≥–∞
            print(f"\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞:")
            print(f"   –ö–ª—é—á–∏: {list(catalog.keys())}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            categories = catalog.get('categories', [])
            print(f"\nüìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ ({len(categories)}):")
            for i, category in enumerate(categories, 1):
                print(f"   {i}. ID: {category.get('id', '–ù–µ—Ç ID')}")
                print(f"      –ù–∞–∑–≤–∞–Ω–∏–µ: {category.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
                print(f"      –û–ø–∏—Å–∞–Ω–∏–µ: {category.get('description', '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è')}")
                print()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã
            products = catalog.get('products', [])
            print(f"üì¶ –¢–æ–≤–∞—Ä—ã ({len(products)}):")
            for i, product in enumerate(products[:5], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"   {i}. ID: {product.get('id', '–ù–µ—Ç ID')}")
                print(f"      –ù–∞–∑–≤–∞–Ω–∏–µ: {product.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
                print(f"      –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {product.get('category', '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')}")
                print(f"      –¶–µ–Ω–∞: {product.get('price', '–ë–µ–∑ —Ü–µ–Ω—ã')} ‚ÇΩ")
                print()
            
            return catalog
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: HTTP {response.status_code}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API: {e}")
        return None

def test_local_catalog():
    """–¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞"""
    print("\nüíæ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥...")
    
    try:
        with open(LOCAL_CATALOG_FILE, 'r', encoding='utf-8') as f:
            catalog = json.load(f)
        
        print("‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ –∑–∞–≥—Ä—É–∂–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞—Ç–∞–ª–æ–≥–∞
        print(f"\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞:")
        print(f"   –ö–ª—é—á–∏: {list(catalog.keys())}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories = catalog.get('categories', [])
        print(f"\nüìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ ({len(categories)}):")
        for i, category in enumerate(categories, 1):
            print(f"   {i}. ID: {category.get('id', '–ù–µ—Ç ID')}")
            print(f"      –ù–∞–∑–≤–∞–Ω–∏–µ: {category.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
            print(f"      –û–ø–∏—Å–∞–Ω–∏–µ: {category.get('description', '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è')}")
            print()
        
        return catalog
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞: {e}")
        return None

def compare_catalogs(server_catalog, local_catalog):
    """–°—Ä–∞–≤–Ω–∏—Ç—å –∫–∞—Ç–∞–ª–æ–≥–∏"""
    print("\nüîÑ –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥–∏...")
    
    if not server_catalog or not local_catalog:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ä–∞–≤–Ω–∏—Ç—å –∫–∞—Ç–∞–ª–æ–≥–∏")
        return
    
    server_categories = {c['id']: c for c in server_catalog.get('categories', [])}
    local_categories = {c['id']: c for c in local_catalog.get('categories', [])}
    
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:")
    print(f"   –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ: {len(server_categories)}")
    print(f"   –õ–æ–∫–∞–ª—å–Ω–æ: {len(local_categories)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–∏—è
    server_only = set(server_categories.keys()) - set(local_categories.keys())
    local_only = set(local_categories.keys()) - set(server_categories.keys())
    
    if server_only:
        print(f"   –¢–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {len(server_only)}")
    if local_only:
        print(f"   –¢–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ: {len(local_only)}")
    
    if not server_only and not local_only:
        print("   ‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
    else:
        print("   ‚ö†Ô∏è –ï—Å—Ç—å —Ä–∞–∑–ª–∏—á–∏—è –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –¢–µ—Å—Ç API –∫–∞—Ç–∞–ª–æ–≥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å–µ—Ä–≤–µ—Ä–∞
    server_catalog = test_server_api()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥
    local_catalog = test_local_catalog()
    
    # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥–∏
    if server_catalog and local_catalog:
        compare_catalogs(server_catalog, local_catalog)
    
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    
    if not server_catalog:
        print("1. ‚ùå API —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        print("2. üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
        print("3. üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL —Å–µ—Ä–≤–µ—Ä–∞")
    
    if not local_catalog:
        print("1. üíæ –õ–æ–∫–∞–ª—å–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("2. üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Ç–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º")
    
    if server_catalog and local_catalog:
        server_categories = len(server_catalog.get('categories', []))
        local_categories = len(local_catalog.get('categories', []))
        
        if server_categories == 0:
            print("1. ‚ùå –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
            print("2. üîß –î–æ–±–∞–≤—å—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
            print("3. üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Ç–µ –∫–∞—Ç–∞–ª–æ–≥")
        
        if local_categories == 0:
            print("1. ‚ùå –õ–æ–∫–∞–ª—å–Ω–æ –Ω–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
            print("2. üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Ç–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º")
    
    print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ sync_catalog.bat –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
    print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞")

if __name__ == "__main__":
    main()
